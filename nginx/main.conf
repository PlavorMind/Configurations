error_log 'C:/plavormind/nginx/private/logs/fallback/error.log' warn;
pid 'C:/plavormind/nginx/private/process-id.txt';

events {
  worker_connections 1024;
}

http {
  map '' $platform {
    default 'windows';
  }

  map $platform $PHPCGIBindPath {
    'linux' 'unix:/run/php/php8.1-fpm.sock';
    'windows' '127.0.0.1:9000';
  }

  map $platform $SSLCertificatesDirectory {
    'linux' '/plavormind/ssl-certificates';
    'windows' 'C:/plavormind/ssl-certificates';
  }

  map $platform $webDirectory {
    'linux' '/plavormind/web/public';
    'windows' 'C:/plavormind/web/public';
  }

  include 'fastcgi.conf';
  include 'mime.types';
  include 'C:/plavormind/nginx/private/settings/banned-*.conf';
  include 'C:/plavormind/nginx/private/settings/block-*.conf';

  add_header Content-Security-Policy "frame-ancestors 'none';" always;
  add_header X-Content-Type-Options 'nosniff' always;
  client_max_body_size 512M;
  fastcgi_index 'index.php';
  http2 on;
  index 'index.php' 'index.html';
  log_format main '[$time_local] $remote_addr "$request" (host: "$host", status: $status, UA: "$http_user_agent", Referer: "$http_referer")';
  log_format multi-protocol '[$time_local] $remote_addr "$request" (host: "$host", HTTPS: "$https", status: $status, UA: "$http_user_agent", Referer: "$http_referer")';
  log_format single-host '[$time_local] $remote_addr "$request" (status: $status, UA: "$http_user_agent", Referer: "$http_referer")';
  log_not_found off;
  root '$webDirectory/fallback';
  server_tokens off;
  ssl_certificate '$SSLCertificatesDirectory/main-certificate.pem';
  ssl_certificate_key '$SSLCertificatesDirectory/main-key.pem';
  ssl_prefer_server_ciphers on;
  ssl_protocols TLSv1.3;
  ssl_session_tickets off;

  access_log 'C:/plavormind/nginx/private/logs/fallback/request.log' multi-protocol;

  # fallback
  server {
    add_header Content-Security-Policy "frame-ancestors 'none';" always;
    add_header Referrer-Policy 'same-origin';
    add_header X-Content-Type-Options 'nosniff' always;
    listen 81 default_server;
    listen [::]:81 default_server;
    listen 443 default_server ssl;
    listen [::]:443 default_server ssl;

    allow 127.0.0.0/8;
    allow ::1;
    allow 192.168.0.0/16;
    deny all;

    location = '/favicon.ico' {
      try_files $uri @global;
    }

    location = '/robots.txt' {
      allow all;
      try_files $uri @global;
    }

    location ~* '.\.php$' {
      fastcgi_pass $PHPCGIBindPath;
      try_files $uri =404;
    }

    location @global {
      root '$webDirectory/global';
    }
  }

  # https-redirect
  server {
    access_log 'C:/plavormind/nginx/private/logs/https-redirect/request.log' main;
    error_log 'C:/plavormind/nginx/private/logs/https-redirect/error.log' warn;
    listen 81;
    listen [::]:81;
    return 301 'https://$host$request_uri';
    server_name plavor.mind.local *.plavor.mind.local;
  }

  # main
  server {
    access_log 'C:/plavormind/nginx/private/logs/main/request.log' single-host;
    error_log 'C:/plavormind/nginx/private/logs/main/error.log' warn;
    listen 443 ssl;
    listen [::]:443 ssl;
    root '$webDirectory/main';
    server_name plavor.mind.local;

    location = '/favicon.ico' {
      try_files $uri @global;
    }

    location = '/robots.txt' {
      allow all;
      try_files $uri @global;
    }

    location ~* '.\.php$' {
      fastcgi_pass $PHPCGIBindPath;
      try_files $uri =404;
    }

    location @global {
      root '$webDirectory/global';
    }
  }

  # cdn
  server {
    access_log 'C:/plavormind/nginx/private/logs/cdn/request.log' single-host;
    # Firefox makes favicons also subject to Content Security Policy.
    add_header Content-Security-Policy "default-src 'none'; img-src 'self'; sandbox; style-src 'unsafe-inline';";
    add_header Content-Security-Policy "frame-ancestors 'none';" always;
    add_header Referrer-Policy 'same-origin';
    add_header X-Content-Type-Options 'nosniff' always;
    error_log 'C:/plavormind/nginx/private/logs/cdn/error.log' warn;
    listen 443 ssl;
    listen [::]:443 ssl;
    root '$webDirectory/cdn';
    server_name cdn.plavor.mind.local;

    location = '/favicon.ico' {
      try_files $uri @global;
    }

    location = '/robots.txt' {
      allow all;
      try_files $uri @global;
    }

    location @global {
      root '$webDirectory/global';
    }
  }

  # wikis
  server {
    access_log 'C:/plavormind/nginx/private/logs/wikis/request-main.log' main;
    error_log 'C:/plavormind/nginx/private/logs/wikis/error.log' warn;
    fastcgi_hide_header X-Content-Type-Options;
    listen 443 ssl;
    listen [::]:443 ssl;
    rewrite '^\/$' '/mediawiki/index.php' last;
    rewrite '^\/(?:delete|edit|history|info|markpatrolled|p(?:a|ur)ge|raw|re(?:nder|vert)|rollback|submit|(?:un)?protect|(?:un)?watch)(?:$|\/)' '/mediawiki/index.php' last;
    root '$webDirectory/wikis';
    server_name w.plavor.mind.local *.w.plavor.mind.local wiki.plavor.mind.local *.wiki.plavor.mind.local;

    location = '/favicon.ico' {
      access_log 'C:/plavormind/nginx/private/logs/wikis/request-extra.log' main;
      try_files $uri @globalFavicon;
    }

    location = '/robots.txt' {
      allow all;
      try_files $uri @global;
    }

    location = '/mediawiki/api.php' {
      access_log 'C:/plavormind/nginx/private/logs/wikis/request-api.log' main;
      fastcgi_pass $PHPCGIBindPath;
      try_files $uri =404;
    }

    location = '/mediawiki/COPYING' {}

    location = '/mediawiki/load.php' {
      access_log 'C:/plavormind/nginx/private/logs/wikis/request-extra.log' main;
      fastcgi_pass $PHPCGIBindPath;
      try_files $uri =404;
    }

    location = '/mediawiki/LocalSettings.php' {
      deny all;
    }

    location = '/mediawiki/thumb.php' {
      access_log 'C:/plavormind/nginx/private/logs/wikis/request-extra.log' main;
      add_header Content-Security-Policy "default-src 'none'; img-src 'self'; sandbox; style-src 'unsafe-inline';";
      add_header Content-Security-Policy "frame-ancestors 'none';" always;
      add_header X-Content-Type-Options 'nosniff' always;
      fastcgi_pass $PHPCGIBindPath;
      try_files $uri =404;
    }

    # Allow access to subpaths of img_auth.php
    location ^~ '/mediawiki/img_auth.php/' {
      access_log 'C:/plavormind/nginx/private/logs/wikis/request-extra.log' main;
      fastcgi_pass $PHPCGIBindPath;
    }

    # Allow access to subpaths of rest.php
    location ^~ '/mediawiki/rest.php/' {
      access_log 'C:/plavormind/nginx/private/logs/wikis/request-api.log' main;
      fastcgi_pass $PHPCGIBindPath;
    }

    location ^~ '/mediawiki/mw-config/' {
      allow 127.0.0.0/8;
      allow ::1;
      allow 192.168.0.0/16;
      deny all;

      location ~* '.\.php$' {
        fastcgi_pass $PHPCGIBindPath;
        try_files $uri =404;
      }
    }

    location ~* '^\/mediawiki\/[^\/]+\.php$' {
      fastcgi_pass $PHPCGIBindPath;
      try_files $uri =404;
    }

    location ~* '^\/mediawiki\/(?:extension|resource|skin)s\/.+\.(?:png|svg)$' {
      access_log 'C:/plavormind/nginx/private/logs/wikis/request-extra.log' main;
    }

    location '/mediawiki/' {
      deny all;
    }

    location @global {
      root '$webDirectory/global';
    }

    location @globalFavicon {
      access_log 'C:/plavormind/nginx/private/logs/wikis/request-extra.log' main;
      root '$webDirectory/global';
    }
  }
}
